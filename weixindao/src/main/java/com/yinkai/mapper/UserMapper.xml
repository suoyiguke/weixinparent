<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yinkai.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.yinkai.entities.User">
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <id column="open_id" jdbcType="VARCHAR" property="openId" />
        <result column="school_id" jdbcType="INTEGER" property="schoolId" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="sex" jdbcType="CHAR" property="sex" />
        <result column="autograph" jdbcType="VARCHAR" property="autograph" />
        <result column="headImage_id" jdbcType="INTEGER" property="headimageId" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user_id, open_id, school_id, nickname, sex, autograph, headImage_id
    </sql>
    <select id="selectByExample" parameterType="com.yinkai.entities.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="com.yinkai.entities.UserKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where user_id = #{userId,jdbcType=INTEGER}
        and open_id = #{openId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.yinkai.entities.UserKey">
        delete from user
        where user_id = #{userId,jdbcType=INTEGER}
        and open_id = #{openId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.yinkai.entities.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.yinkai.entities.User">
        insert into user (user_id, open_id, school_id,
        nickname, sex, autograph,
        headImage_id)
        values (#{userId,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, #{schoolId,jdbcType=INTEGER},
        #{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{autograph,jdbcType=VARCHAR},
        #{headimageId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.yinkai.entities.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="openId != null">
                open_id,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="autograph != null">
                autograph,
            </if>
            <if test="headimageId != null">
                headImage_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=VARCHAR},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="autograph != null">
                #{autograph,jdbcType=VARCHAR},
            </if>
            <if test="headimageId != null">
                #{headimageId,jdbcType=INTEGER},
            </if>
        </trim>

    </insert>
    <select id="countByExample" parameterType="com.yinkai.entities.UserExample" resultType="java.lang.Long">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.openId != null">
                open_id = #{record.openId,jdbcType=VARCHAR},
            </if>
            <if test="record.schoolId != null">
                school_id = #{record.schoolId,jdbcType=INTEGER},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=CHAR},
            </if>
            <if test="record.autograph != null">
                autograph = #{record.autograph,jdbcType=VARCHAR},
            </if>
            <if test="record.headimageId != null">
                headImage_id = #{record.headimageId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set user_id = #{record.userId,jdbcType=INTEGER},
        open_id = #{record.openId,jdbcType=VARCHAR},
        school_id = #{record.schoolId,jdbcType=INTEGER},
        nickname = #{record.nickname,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=CHAR},
        autograph = #{record.autograph,jdbcType=VARCHAR},
        headImage_id = #{record.headimageId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yinkai.entities.User">
        update user
        <set>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="autograph != null">
                autograph = #{autograph,jdbcType=VARCHAR},
            </if>
            <if test="headimageId != null">
                headImage_id = #{headimageId,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
        and open_id = #{openId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yinkai.entities.User">
    update user
    set school_id = #{schoolId,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      autograph = #{autograph,jdbcType=VARCHAR},
      headImage_id = #{headimageId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
      and open_id = #{openId,jdbcType=VARCHAR}
  </update>
    <!--自定义-->

    <sql id="pc_sql1">
        SELECT user.open_id AS openId,user.user_id as userId,`user`.school_id as schoolId,`user`.sex,`user`.nickname,`user`.autograph,school.`name` AS schoolname,user.headImage_id AS headimageId
    </sql>

    <select id="findAllUser" resultType="com.yinkai.entities.custom.UserCustom">
        <include refid="pc_sql1"/>
        FROM user,school
        WHERE `user`.school_id=school.school_id
    </select>

    <insert id="addLikeTopic" parameterType="com.yinkai.entities.vo.UserTopicVo">
     insert into user_topic(user_topic.user_id,user_topic.topic_id)
     VALUES(#{user.userId,jdbcType=INTEGER},#{topic.topicId,jdbcType=INTEGER})
    </insert>

    <delete id="deleteLikeTopic" parameterType="com.yinkai.entities.vo.UserTopicVo">
        DELETE
        FROM user_topic
        WHERE user_topic.user_id=#{user.userId,jdbcType=INTEGER} AND user_topic.topic_id=#{topic.topicId,jdbcType=INTEGER}
    </delete>

    <select id="findUserCustomByOpenId" resultType="com.yinkai.entities.custom.UserCustom">
        <include refid="pc_sql1"/>
        FROM user,school
        WHERE `user`.school_id=school.school_id AND `user`.open_id = #{user.openId,jdbcType=INTEGER}
    </select>

    <!--UserCustom determineUser(String nickname);-->
    <select id="determineUser" resultType="com.yinkai.entities.User" parameterType="String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE nickname=#{nickname,jdbcType=VARCHAR}
    </select>


</mapper>